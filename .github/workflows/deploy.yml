name: CI/CD Laravel on AWS Lightsail

on:
  push:
    tags:
      - "v*"  # Dispara quando uma tag Ã© criada (ex: v1.0.0)

jobs:
  # ðŸš€ Etapa 1: Build e Testes
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do CÃ³digo
        uses: actions/checkout@v4
        with:
          path: ./  # Evita duplicaÃ§Ã£o

      - name: Configurar PHP e DependÃªncias
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: pdo, pdo_mysql, redis
          coverage: none

      - name: Instalar dependÃªncias do PHP (Composer)
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Node.js (NPM)
        run: npm install && npm run build

      - name: Verificar diretÃ³rios e listar arquivos para depuraÃ§Ã£o
        run: ls -R

      - name: Rodar Testes UnitÃ¡rios
        run: php artisan test --stop-on-failure tests

  # ðŸš€ Etapa 2: Deploy no AWS Lightsail (sÃ³ se os testes passarem)
  deploy:
    needs: build-and-test  # SÃ³ executa se os testes passarem
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do CÃ³digo
        uses: actions/checkout@v4
        env:
          SERVER_SSH_USER: ${{ secrets.SERVER_SSH_USER }}

      - name: Configurar SSH
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > /home/$SERVER_SSH_USER/.ssh/id_rsa
          chmod 600 /home/$SERVER_SSH_USER/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> /home/$SERVER_SSH_USER/.ssh/known_hosts

      - name: Deploy no AWS Lightsail
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_SSH_USER: ${{ secrets.SERVER_SSH_USER }}
          REPO_NAME: ${{ github.repository }}
        run: |
          ssh $SERVER_SSH_USER@$SERVER_HOST << 'EOF'
            set -e
            echo "ðŸ›  Verificando diretÃ³rio do projeto..."
            if [ ! -d "/home/$SERVER_SSH_USER/${REPO_NAME}" ]; then
              echo "ðŸ“‚ Projeto nÃ£o encontrado. Clonando novo repositÃ³rio..."
              git clone https://github.com/${REPO_NAME}.git /home/$SERVER_SSH_USER/${REPO_NAME}
            fi

            echo "ðŸ›  Atualizando cÃ³digo no servidor..."
            cd /home/$SERVER_SSH_USER/${REPO_NAME}
            git checkout main
            git pull origin main

            # Parar e remover containers antigos
            echo "ðŸ›‘ Parando e removendo containers antigos..."
            docker-compose down

            echo "ðŸ“¦ Construindo a imagem Docker..."
            docker-compose build

            echo "ðŸ”„ Subindo os containers..."
            docker-compose up -d --remove-orphans

            echo "ðŸš€ Executando migrations e seeders..."
            docker-compose exec laravel-app php artisan migrate --seed --force

            echo "âš¡ Limpando e otimizando cache..."
            docker-compose exec laravel-app php artisan optimize:clear
            docker-compose exec laravel-app php artisan optimize

            echo "âœ… Deploy finalizado com sucesso!"
          EOF
